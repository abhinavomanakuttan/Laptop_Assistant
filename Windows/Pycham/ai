import datetime
import os

import openai
import speech_recognition
import wikipedia
import pyaudio
import speech_recognition as sr
import webbrowser
import  win32com.client
import subprocess ,sys
speaker= win32com.client.Dispatch("SAPI.SpVoice")
def ai(prompt):
    openai.api_key= apikey
    response = openai.Completion.create{
    model = "gpt-3.5-turbo",
    temperature = 0.7,
    max_tokens = 256,
    top_p = 1,
    frequency_penalty = 0,
    presence_penalty = 0
    }
    #todo: Wrap this inside of a try catxh block
    print(response["choices"][0]["text"])
    
def say(text):


        speaker.Speak(f"say{text}")
        #print("Enter the word you want to speak to the computer")
        #s = input()
        #speaker.Speak(s)
def takeCommand():
    r=sr.Recognizer()
    with sr.Microphone() as source:
        r.pause_threshold=1
        audio=r.listen(source)
        try:

            query=r.recognize_google(audio,language='en')
            query=r.recognize_google(audio,language='en')
            print(f"User said: {query}\n")
            return query
        except Exception as e:
            return "Some Error Occurred.sorry from me"




if _name_ == '_main_':
    print("Ai bot ")
    #print("hey am Abhinav\nHow can i help you?")
    say("Ai bot\nhey am Abhinav\nHow can i help you?")

    while True:
        print("Listening...")
        query = takeCommand()
        # todo: Add more sites
        sites = [["youtube", "https://www.youtube.com"], ["wikipedia", "https://www.wikipedia.com"],
                 ["google", "https://www.google.com"],["spotify","https://www.spotify.com"],["Chatgpt","https://www.chatgpt.com"] ]
        for site in sites:
            if f"Open {site[0]}".lower() in query.lower():
                say(f"Opening {site[0]} sir...")
                webbrowser.open(site[1])
        '''if "open movie" in query:
            moviePath = "C:/Users/abhin/Downloads/Telegram Desktop"
            opener ="open" if sys.platform == "win32" else "xdg-open"
            subprocess.call([opener, moviePath])'''
        if "the time".lower() in query:
                strfTime = datetime.datetime.now().strftime("%H:%M:%S")
                say(f"Sir the time is  {strfTime}")
        if "openai".lower() in query:
            ai(prompt=)
